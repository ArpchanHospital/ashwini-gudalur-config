{
    "id": "bahmni.registration",
    "instanceOf": "bahmni.template.registration",
    "description": "Bahmni Patient Registration App",
    "extensionPoints": [
        {
            "id": "org.bahmni.registration.patient.search.result.action",
            "description": "Bahmni Patient Search Result Action"
        },
        {
            "id": "org.bahmni.registration.patient.next",
            "description": "After Bahmni Patient Registration, forward url configuration"
        }
    ],
    "contextModel": [
        "patientUuid",
        "activeVisitUuid"
    ],
    "config": {
        "patientInformation": {
            "additionalPatientInformation": {
                "title": "Additional Patient Information",
                "attributes": [
                    "debt",
                    "distanceFromCenter",
                    "isUrban",
                    "cluster",
                    "RationCard",
                    "familyIncome"
                ]
            }
        },
        "autoCompleteFields": [
            "familyName",
            "caste"
        ],
        "defaultIdentifierPrefix": "GAN",
        "defaultVisitType": "OPD",
        "searchByIdForwardUrl": "/patient/{{patientUuid}}",
        "showMiddleName": false,
        "showCasteSameAsLastNameCheckbox": true,
        "localNameSearch": false,
        "conceptSetUI": {
            "REGISTRATION FEES": {
                "required": true,
                "label": "Fee"
            }
        },
        "fieldValidation": {
            "primaryContact": {
                "pattern": "[0-9]{8,10}",
                "errorMessage": "Should be 12 characters starting with 91 (country code)"
            },
            "landHolding": {
                "pattern": "[0-9]{0,3}",
                "errorMessage": "Should be between 1 to 999 acres"
            },
            "familyName": {
                "pattern": "[a-zA-Z]{0,}",
                "errorMessage": "Should contain characters"
            },
            "address1": {
                "pattern": "[a-zA-Z0-9]{3}",
                "errorMessage": "Should contain 3 characters"
            }
        }
    }
}